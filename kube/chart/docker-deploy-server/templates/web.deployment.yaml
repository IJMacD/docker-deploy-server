apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-web'
  labels:
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/version: '{{ .Chart.Version }}'
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: '{{ .Chart.Name }}'
      app.kubernetes.io/instance: '{{ .Release.Name }}'
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: '{{ .Chart.Name }}'
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/component: web
    spec:
      containers:
        - name: web
          image: '{{ .Values.web.repository.image }}{{ if ne .Values.appVersion "" }}:{{ .Values.appVersion }}{{ end }}'
          ports:
            - name: web
              containerPort: 8080
          volumeMounts:
            - name: fleets
              mountPath: /fleets
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      {{- if .Values.web.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.web.imagePullSecrets }}
      {{- end }}
      volumes:
        - name: fleets
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-fleets